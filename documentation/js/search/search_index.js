var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.141,1,1.141]],["body/controllers/AppController.html",[0,1.374,1,1.374,2,1.513,3,0.973,4,0.789,5,0.789,6,1.513,7,0.636,8,1.374,9,2.688,10,3.521,11,2.796,12,0.081,13,1.374,14,1.981,15,1.374,16,1.981,17,2.796,18,2.796,19,1.981,20,1.981,21,1.592,22,0.789,23,1.04,24,1.513,25,2.796,26,1.513,27,0.973,28,0.973,29,1.981,30,1.204,31,1.699,32,2.796,33,1.981,34,1.513,35,1.981,36,0.051,37,0.051]],["title/modules/AppModule.html",[38,1.412,39,1.141]],["body/modules/AppModule.html",[1,1.313,2,1.675,3,0.701,4,0.568,5,0.568,8,0.701,12,0.081,13,0.701,15,0.701,21,1.807,22,0.568,23,1.098,24,1.089,27,0.701,28,0.701,36,0.04,37,0.04,38,1.625,39,1.681,40,0.867,41,0.701,42,1.089,43,1.089,44,0.701,45,2.041,46,1.089,47,1.089,48,1.089,49,1.675,50,1.089,51,1.089,52,1.426,53,1.426,54,2.194,55,3.002,56,1.426,57,1.089,58,0.867,59,0.867,60,1.089,61,1.426,62,1.089,63,1.333,64,2.194,65,1.426,66,0.701,67,1.426,68,2.194,69,1.089,70,1.426,71,1.089,72,2.194,73,1.426,74,1.089,75,2.194,76,1.089,77,1.426,78,1.426,79,1.426,80,1.426,81,1.426,82,2.194,83,2.194,84,1.426,85,1.426,86,1.426,87,1.426,88,1.426,89,1.426,90,1.426,91,1.426,92,1.089,93,1.426]],["title/injectables/AppService.html",[23,0.746,94,0.925]],["body/injectables/AppService.html",[3,0.901,4,0.731,5,0.731,7,0.589,8,1.3,9,2.595,12,0.079,13,1.525,15,0.901,21,1.3,22,0.731,23,0.85,27,0.901,28,0.901,30,1.887,31,1.115,36,0.048,37,0.048,58,1.115,63,2.066,94,1.054,95,1.115,96,1.4,97,1.3,98,2.371,99,3.105,100,3.105,101,1.834,102,2.647,103,1.608,104,1.608,105,2.066,106,2.647,107,1.834,108,3.105,109,1.834,110,1.4,111,1.4,112,3.105,113,1.834,114,1.4,115,1.834,116,1.834]],["title/injectables/LoggerMiddleware.html",[66,1.141,94,0.925]],["body/injectables/LoggerMiddleware.html",[3,0.645,4,0.523,5,0.523,7,0.421,8,1.011,12,0.082,13,1.011,15,0.645,21,1.011,22,0.523,27,0.645,28,0.645,30,1.541,31,1.541,36,0.037,37,0.037,57,1.002,58,0.798,59,0.798,60,1.002,62,1.002,63,1.745,66,1.011,92,1.002,94,0.819,95,0.798,97,1.011,98,1.936,103,0.798,104,0.798,105,1.25,111,1.936,117,1.002,118,2.057,119,2.057,120,3.307,121,3.579,122,2.871,123,2.871,124,1.313,125,2.057,126,1.313,127,1.313,128,1.313,129,2.057,130,1.002,131,1.313,132,1.313,133,2.057,134,2.057,135,3.118,136,2.871,137,2.057,138,2.536,139,1.313,140,2.057,141,2.871,142,2.057,143,1.313,144,1.313]],["title/coverage.html",[145,1.896]],["body/coverage.html",[0,1.167,1,1.167,5,0.946,6,1.814,12,0.077,23,0.763,36,0.058,37,0.058,44,1.167,59,1.443,66,1.167,94,1.262,96,1.814,105,1.443,117,1.814,145,1.443,146,2.376,147,2.376,148,2.376,149,4.072,150,3.167,151,2.376,152,2.165,153,2.376,154,3.563,155,3.167,156,1.814,157,1.443,158,2.376,159,2.376]],["title/dependencies.html",[41,1.366,160,1.5]],["body/dependencies.html",[12,0.081,22,1.009,26,1.933,36,0.06,37,0.06,41,1.244,69,1.933,71,1.933,74,1.933,76,1.933,110,1.933,130,1.933,161,2.532,162,3.303,163,2.532,164,2.532,165,2.532,166,2.532,167,2.532,168,2.532,169,2.532,170,2.532,171,2.532,172,2.532,173,2.532,174,2.532,175,2.532]],["title/miscellaneous/functions.html",[176,0.966,177,2.123]],["body/miscellaneous/functions.html",[7,1.022,12,0.069,36,0.069,37,0.069,44,2.005,152,1.935,176,1.564,177,2.431,178,2.431]],["title/index.html",[7,0.631,179,1.965,180,1.965]],["body/index.html",[4,0.716,12,0.078,34,1.99,36,0.047,37,0.047,145,1.091,181,1.796,182,1.796,183,2.607,184,1.796,185,1.796,186,1.796,187,1.796,188,1.796,189,1.796,190,1.371,191,3.068,192,1.796,193,1.796,194,1.796,195,1.796,196,3.847,197,1.796,198,1.796,199,1.796,200,3.729,201,1.796,202,1.796,203,2.607,204,1.796,205,1.796,206,1.796,207,1.796,208,2.607,209,1.796,210,1.796,211,1.796,212,2.607,213,2.607,214,1.796,215,1.796,216,1.796,217,1.796,218,1.796,219,1.371,220,1.796,221,1.796,222,1.796,223,1.796,224,1.796,225,1.796,226,1.796,227,1.796,228,1.796,229,1.796,230,1.371,231,1.796,232,1.796,233,1.796,234,1.796,235,1.796,236,1.796,237,1.371]],["title/modules.html",[40,1.896]],["body/modules.html",[12,0.07,36,0.07,37,0.07,39,1.593,40,1.971,219,2.476,238,3.244,239,3.244,240,3.244]],["title/overview.html",[241,2.382]],["body/overview.html",[0,1.321,12,0.069,23,1.215,36,0.062,37,0.062,38,2.087,39,1.959,41,1.321,42,2.053,43,2.053,44,1.321,45,2.053,46,2.053,47,2.053,48,2.053,49,2.622,50,2.053,51,2.053,95,1.634,114,2.622,241,2.053,242,2.689]],["title/properties.html",[97,1.366,160,1.5]],["body/properties.html",[12,0.079,36,0.068,37,0.068,97,1.522,157,1.883,190,2.366,230,2.366,237,2.366,243,3.098,244,3.098]],["title/miscellaneous/variables.html",[176,0.966,245,2.123]],["body/miscellaneous/variables.html",[7,0.905,12,0.077,36,0.064,37,0.064,103,2.151,104,2.151,152,1.714,156,2.702,157,2.151,176,1.386,178,2.702,245,2.154,246,2.821,247,2.821,248,2.821,249,2.821]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":243,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"overview.html":{}}}],["10.0.0",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":242,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":143,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["5.0.0",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["500",{"_index":139,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["60000",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["7.0.0",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["7.1.13",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":220,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["apioperation({summary",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":198,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":189,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":23,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["author",{"_index":230,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":221,"title":{},"body":{"index.html":{}}}],["body",{"_index":135,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":240,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":238,"title":{},"body":{"modules.html":{}}}],["building",{"_index":184,"title":{},"body":{"index.html":{}}}],["catch",{"_index":127,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["catch(httpexception",{"_index":131,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["class",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["constructor(private",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["consumer",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":145,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["de",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":190,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":199,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":209,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":185,"title":{},"body":{"index.html":{}}}],["email",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":130,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["framework",{"_index":183,"title":{},"body":{"index.html":{}}}],["function",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":177,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/hello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello2",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":179,"title":{"index.html":{}},"body":{}}],["grow",{"_index":216,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":227,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":128,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["httpmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":234,"title":{},"body":{"index.html":{}}}],["id",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["identifier",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["injectable",{"_index":94,"title":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"overview.html":{}}}],["installation",{"_index":195,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":197,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":223,"title":{},"body":{"index.html":{}}}],["json.stringify(body",{"_index":141,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["kamil",{"_index":231,"title":{},"body":{"index.html":{}}}],["legend",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":237,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":213,"title":{},"body":{"index.html":{}}}],["limit",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["logger('http",{"_index":125,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(appservice.name",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["loggermiddleware",{"_index":66,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["matching",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":138,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["metadata",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":133,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["minute",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":176,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":212,"title":{},"body":{"index.html":{}}}],["mode",{"_index":203,"title":{},"body":{"index.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":226,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":232,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["nest",{"_index":191,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":236,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":129,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["next",{"_index":122,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":123,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":182,"title":{},"body":{"index.html":{}}}],["npm",{"_index":196,"title":{},"body":{"index.html":{}}}],["open",{"_index":214,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["originalurl",{"_index":134,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":241,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":160,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["par",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["please",{"_index":224,"title":{},"body":{"index.html":{}}}],["port",{"_index":156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["prisma/client",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["private",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["process.env.port",{"_index":246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.version",{"_index":248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":205,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":181,"title":{},"body":{"index.html":{}}}],["project",{"_index":215,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"properties.html":{}}}],["provide",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rate",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":225,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["reflect",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":194,"title":{},"body":{"index.html":{}}}],["req",{"_index":142,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":120,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["requêtes",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":121,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('finish",{"_index":132,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{}}}],["route",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":200,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":186,"title":{},"body":{"index.html":{}}}],["server",{"_index":187,"title":{},"body":{"index.html":{}}}],["side",{"_index":188,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"index.html":{}}}],["sponsors",{"_index":218,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:16",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:34",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/logger.middleware.ts",{"_index":117,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/utils/logger.middleware.ts:13",{"_index":126,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/utils/logger.middleware.ts:14",{"_index":124,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["start",{"_index":201,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":204,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":206,"title":{},"body":{"index.html":{}}}],["started",{"_index":180,"title":{"index.html":{}},"body":{}}],["starter",{"_index":193,"title":{},"body":{"index.html":{}}}],["statements",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":136,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["statusmessage",{"_index":137,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":228,"title":{},"body":{"index.html":{}}}],["summary",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":219,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":239,"title":{},"body":{"modules.html":{}}}],["table",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test'})@get('/hello",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["test:covsupport",{"_index":211,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":210,"title":{},"body":{"index.html":{}}}],["tests",{"_index":208,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":217,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.error",{"_index":140,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.log(message",{"_index":144,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["throttlerguard",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["toto",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["toto@gmail.com",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["touch",{"_index":229,"title":{},"body":{"index.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["ttl",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":235,"title":{},"body":{"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["typescript",{"_index":192,"title":{},"body":{"index.html":{}}}],["unit",{"_index":207,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":244,"title":{},"body":{"properties.html":{}}}],["use",{"_index":118,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(request",{"_index":119,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/logger.middleware",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["v1",{"_index":249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":245,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":157,"title":{},"body":{"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":202,"title":{},"body":{"index.html":{}}}],["website",{"_index":233,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":222,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHello2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Route de test'})@Get('/hello')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiOperation } from '@nestjs/swagger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello() {\n    return this.appService.getHello();\n  }\n\n  @ApiOperation({ summary: 'Route de test' })\n  @Get('/hello')\n  getHello2() {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Logger, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LoggerMiddleware } from './utils/logger.middleware';\nimport { HttpModule } from '@nestjs/axios';\nimport { ConfigModule } from '@nestjs/config';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [\n    HttpModule,\n    ConfigModule.forRoot({ isGlobal: true }),\n\n    // Rate Limit : 50 requêtes par minute\n    ThrottlerModule.forRoot([\n      {\n        ttl: 60000,\n        limit: 50,\n      },\n    ]),\n  ],\n  controllers: [AppController],\n  providers: [\n    Logger,\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppService.name)\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class AppService {\n  prisma = new PrismaClient();\n  private readonly logger = new Logger(AppService.name);\n\n  async getHello(): Promise {\n    const toto = {\n      id: 1,\n      email: 'toto@gmail.com',\n      name: 'toto',\n    };\n    return toto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/logger.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/utils/logger.middleware.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Catch,\n  HttpException,\n  Injectable,\n  Logger,\n  NestMiddleware,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Catch(HttpException)\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger('HTTP');\n  use(request: Request, response: Response, next: NextFunction) {\n    response.on('finish', () => {\n      const { method, originalUrl, body } = request;\n      const { statusCode, statusMessage } = response;\n      const message = `${method} ${originalUrl} ${statusCode} ${statusMessage}`;\n\n      if (statusCode >= 500) {\n        return this.logger.error(\n          message,\n          body && JSON.stringify(body) != '{}'\n            ? 'Req Body : ' + JSON.stringify(body)\n            : '',\n        );\n      }\n      if (statusCode >= 400) {\n        return this.logger.error(\n          message,\n          body && JSON.stringify(body) != '{}'\n            ? 'Req Body : ' + JSON.stringify(body)\n            : '',\n        );\n      }\n      return this.logger.log(message);\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.0\n        \n            @nestjs/common : ^10.2.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.2.7\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.13\n        \n            @nestjs/throttler : ^5.0.0\n        \n            @prisma/client : ^5.4.2\n        \n            helmet : ^7.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PORT   (src/.../main.ts)\n                        \n                        \n                            VERSION   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.PORT || 3000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.VERSION || 'v1'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
